import("ynot.impl.provider.request")
import("ynot.vm")
$INTEGER := static("Integer")
$ARRAYS := static("Arrays")

$vm := new VirtualMachine
$provider := new("InputStreamRequestProvider", {"console"})
$in := new PipedInputStream
$out := new("PipedOutputStream", {$in})
$provider.setInputStream($in)
$context := $vm.getContext($provider)
$reqParser := $context.getBean("requestParser")
$provider.setParser($reqParser)
$shell := $context.getBean("shell")
$shell.setLazyLoading(true)
$req := null
$listReqs := new("ArrayList") 
while(true)
	write ynot>
	$req := readLine
	if(["history" = $req])
		$i := 0
		for($listReqs, "oneReq")
			echo ${i} : ${oneReq}
			$i++
		end
		continue
	elseif(["history -c" = $req])
		$listReqs.clear()
		continue
	elseif(["history -r" = $req])
		echo("which line(s) ?")
		$lines := readLine
		$linesNumber := $lines.split(",")
		for([$ARRAYS.asList($linesNumber)], "lineNumber")
			$listReqs.remove([$INTEGER.parseInt($lineNumber)])
		end
		continue
	elseif(["history -f" = $req])
		echo which file ?
		$file := readLine
		$shell.setVariable("listReqsToFlush", $listReqs)
		$shell.setVariable("fileWhereFlush", $file)
		$req := "flush($fileWhereFlush, $listReqsToFlush)"
		$listReqs := new("ArrayList") 
	end
	$listReqs.add($req)
	$reqBytes := $req.getBytes("UTF-8")
	$out.write($reqBytes)
	$out.flush()
	while([$shell.hasStep()])
		$shell.tryToRunStep()
		$shell.nextStep()
	end
end